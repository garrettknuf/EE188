process (all)
	begin
		if std_match(IR, OpMOV_Imm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpMOVW_Disp_PC_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrPC;
			DAU_OffsetSel <= DAU_Offset8x2;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVL_Disp_PC_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrPC;
			DAU_OffsetSel <= DAU_Offset8x4;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOV_Rm_To_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpMOVB_Rm_To_At_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVW_Rm_To_At_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVL_Rm_To_At_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVB_At_Rm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVW_At_Rm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVL_At_Rm_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVB_Rm_To_At_Dec_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVW_Rm_To_At_Dec_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= '1';
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVL_Rm_To_At_Dec_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVB_At_Rm_Inc_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVW_At_Rm_Inc_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= '1';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVL_At_Rm_Inc_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVB_R0_To_At_Disp_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_Offset4x1;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_R0;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVW_R0_To_At_Disp_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_Offset4x2;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_R0;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVL_R0_To_At_Disp_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_Offset4x3;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_R0;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVB_At_Disp_Rm_To_R0) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_Offset4x1;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= R0;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVW_At_Disp_Rm_To_R0) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_Offset4x2;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= R0;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVL_At_Disp_Rm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_Offset4x3;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVB_Rm_To_At_R0_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetR0;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVW_Rm_To_At_R0_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetR0;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVL_Rm_To_At_R0_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetR0;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rn;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVB_At_R0_Rm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetR0;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVW_At_R0_Rm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetR0;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVL_At_R0_Rm_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetR0;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVB_R0_To_At_Disp_GBR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrGBR;
			DAU_OffsetSel <= DAU_Offset8x1;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_R0;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rm;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVW_R0_To_At_Disp_GBR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrGBR;
			DAU_OffsetSel <= DAU_Offset8x2;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_R0;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rm;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVL_R0_To_At_Disp_GBR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrGBR;
			DAU_OffsetSel <= DAU_Offset8x4;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_R0;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rm;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, OpMOVB_At_Disp_GBR_To_R0) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrGBR;
			DAU_OffsetSel <= DAU_Offset8x1;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= R0;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVW_At_Disp_GBR_To_R0) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrGBR;
			DAU_OffsetSel <= DAU_Offset8x2;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= R0;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVL_At_Disp_GBR_To_R0) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrGBR;
			DAU_OffsetSel <= DAU_Offset8x4;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= R0;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVA) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrPC;
			DAU_OffsetSel <= DAU_Offset8x4;
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= R0;
			RegStore <= '1';
			RegASel <= RegASel_Rm;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rm;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpMOVT) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= RegAxInSel_Rm;
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSwapB) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSwapW) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpXTRCT) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpADD_Rm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_B;
			CinCmd <= CinCmd_Zero;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpADD_Imm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_B;
			CinCmd <= CinCmd_Zero;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpADDC) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_B;
			CinCmd <= CinCmd_Carry;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpADDV) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_B;
			CinCmd <= CinCmd_Zero;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Overflow;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_EQ_Imm) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_EQ_RmRn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_HS) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_GEQ;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_GE) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_GEQ;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_HI) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_HI;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_GT) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_GT;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_PL) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_Zero;
			CinCmd <= CinCmd_Zero;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_PL;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_PZ) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_Zero;
			CinCmd <= CinCmd_Zero;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_PZ;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_STR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_STR;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCMP_DT) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_Zero;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpEXTS_B) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpEXTS_W) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpEXTU_B) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpEXTU_W) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_A;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpNEG) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_NOTA;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpNEGC) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_NOTA;
			CinCmd <= CinCmd_Borrow;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Borrow;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSUB) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSUBC) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_Borrow;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Borrow;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSUBV) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOTB;
			CinCmd <= CinCmd_One;
			SCmd <= '-';
			ALUCmd <= ALUCmd_ADDER;
			TbitOp <= Tbit_Overflow;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpAND_Rm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_AND;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpAND_Imm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_AND;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpAND_Imm_B) then
			ALUOpACmd <= ALUOpACmd_DB;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_AND;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForRead;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpNOT) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_NOT;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpOR_Rm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_OR;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpOR_Imm) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_OR;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpOR_Imm_B) then
			ALUOpACmd <= ALUOpACmd_DB;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_OR;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForRead;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpTAS_B) then
			ALUOpACmd <= ALUOpACmd_DB;
			ALUOpBCmd <= '-';
			FCmd <= FCmd_ONES;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForRead;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpTST_Rm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_AND;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpTST_Imm) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_AND;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '0';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpTST_Imm_B) then
			ALUOpACmd <= ALUOpACmd_DB;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_AND;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForRead;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpXOR_Rm_Rn) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_RegB;
			FCmd <= FCmd_XOR;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= RegBSel_Rm;
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpXOR_Imm) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_XOR;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpXOR_Imm_B) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= ALUOpBCmd_Imm;
			FCmd <= FCmd_XOR;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForRead;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpROTL) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_ROL;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpROTR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_ROR;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpROTCL) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_RLC;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpROTCR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_RRC;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHAL) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSL;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHAR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_ASR;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLL) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSL;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLR) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSR;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= Tbit_Carry;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLL2) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSL2;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLR2) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSR2;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLL8) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSL8;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLR8) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSR8;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLL16) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSL16;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpSHLR16) then
			ALUOpACmd <= ALUOpACmd_RegA;
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= SCmd_LSR16;
			ALUCmd <= ALUCmd_SHIFT;
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= RegInSel_Rn;
			RegStore <= '1';
			RegASel <= RegASel_Rn;
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBF) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_Offset8 when Tbit = '0' else PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= BranchSlot when Tbit = '0' else Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBFS) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_Offset8 when Tbit = '0' else PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= BranchSlot when Tbit = '0' else Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBT) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_Offset8 when Tbit = '1' else PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= BranchSlot when Tbit = '1' else Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBTS) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_Offset8 when Tbit = '1' else PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= BranchSlot when Tbit = '1' else Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBRA) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_Offset12;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBRAF) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetReg;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= RegA1Sel_IR_11_8;
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBSR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_Offset12;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '1';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpBSRF) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetReg;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '1';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= RegA1Sel_IR_11_8;
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpJMP) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrZero;
			PAU_OffsetSel <= PAU_OffsetReg;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= RegA1Sel_IR_11_8;
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpJSR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrZero;
			PAU_OffsetSel <= PAU_OffsetReg;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '1';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= RegA1Sel_IR_11_8;
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpRTS) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrZero;
			PAU_OffsetSel <= PAU_OffsetPR;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '-';
			RegStore <= '0';
			RegASel <= '-';
			RegBSel <= '-';
			RegAxInSel <= '-';
			RegAxStore <= '0';
			RegA1Sel <= '-';
			RegA2Sel <= '-';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpCLRT) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= FCmd_ONE;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpLDC_Rm_To_SR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpLDC_Rm_To_GBR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '1';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpLDC_Rm_To_VBR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpLDCL_At_Rm_Inc_To_SR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '1';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForReadPostInc;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpLDCL_At_Rm_Inc_To_GBR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '1';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForReadPostInc;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpLDCL_At_Rm_Inc_To_VBR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= WaitForReadPostInc;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, OpLDS_Rm_To_PR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= nan;
			PAU_OffsetSel <= nan;
			PAU_UpdatePC <= nan;
			PAU_UpdatePR <= nan;
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, OpLDSL_At_Rm_Inc_To_PR) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '1';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_INC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_POST;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '1';
			WR <= '0';
		elsif std_match(IR, NOP) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, RTE) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '1';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '1';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= RTE_Init;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, SETT) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= FCmd_ZERO;
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= ALUCmd_FBLOCK;
			TbitOp <= Tbit_Zero;
			UpdateTbit <= '1';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, STC_SR_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, STC_GBR_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, STC_VBR_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, STCL_SR_To_At_Dec_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, STCL_GBR_To_At_Dec_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, STCL_VBR_To_At_Dec_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Fetch;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, STS_PR_To_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '-';
			DAU_OffsetSel <= '-';
			DAU_IncDecSel <= '-';
			DAU_IncDecBit <= '-';
			DAU_PrePostSel <= '-';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '0';
		elsif std_match(IR, STSL_PR_To_At_Dec_Rn) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= PAU_AddrPC;
			PAU_OffsetSel <= PAU_OffsetWord;
			PAU_UpdatePC <= '1';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= DAU_AddrRn;
			DAU_OffsetSel <= DAU_OffsetZero;
			DAU_IncDecSel <= MemUnit_DEC;
			DAU_IncDecBit <= 2;
			DAU_PrePostSel <= MemUnit_PRE;
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= Idle;
			RD <= '0';
			WR <= '1';
		elsif std_match(IR, TRAPA) then
			ALUOpACmd <= '-';
			ALUOpBCmd <= '-';
			FCmd <= '-';
			CinCmd <= '-';
			SCmd <= '-';
			ALUCmd <= '-';
			TbitOp <= '-';
			UpdateTbit <= '0';
			PAU_SrcSel <= '-';
			PAU_OffsetSel <= '-';
			PAU_UpdatePC <= '0';
			PAU_UpdatePR <= '0';
			DAU_SrcSel <= '0';
			DAU_OffsetSel <= '0';
			DAU_IncDecSel <= '0';
			DAU_IncDecBit <= '0';
			DAU_PrePostSel <= '0';
			DAU_LoadGBR <= '0';
			RegInSel <= '0';
			RegStore <= '0';
			RegASel <= '0';
			RegBSel <= '0';
			RegAxInSel <= '0';
			RegAxStore <= '0';
			RegA1Sel <= '0';
			RegA2Sel <= '0';
			RegOpSel <= '0';
			NextState <= TRAPA_Init;
			RD <= '1';
			WR <= '0';
		end if;
	 end process;
